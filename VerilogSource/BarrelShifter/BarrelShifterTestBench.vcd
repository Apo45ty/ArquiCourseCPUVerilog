$date
	Thu Mar 24 15:39:05 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BarrelShifterTestBench $end
$var wire 1 ! SR29_OUT $end
$var wire 32 " Out [31:0] $end
$var reg 32 # IR [31:0] $end
$var reg 32 $ Rm [31:0] $end
$var reg 32 % Rs [31:0] $end
$var reg 1 & SR29_IN $end
$scope module bs $end
$var wire 32 ' IR [31:0] $end
$var wire 32 ( Out [31:0] $end
$var wire 32 ) Rm [31:0] $end
$var wire 32 * Rs [31:0] $end
$var wire 1 & SR29_IN $end
$var wire 1 ! SR29_OUT $end
$var reg 32 + _Out [31:0] $end
$var reg 1 , _SR29_OUT $end
$var reg 32 - shiftAmount [31:0] $end
$var reg 2 . shiftType [1:0] $end
$var reg 32 / shiftVal [31:0] $end
$var reg 33 0 temp [32:0] $end
$var reg 33 1 temp2 [32:0] $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100001 2
b0 1
b0 0
b0 /
b0 .
b0 -
0,
b0 +
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
b0 #
b0 "
0!
$end
#1
b100 "
b100 (
b100 +
b100 1
b100000 2
b10 0
b1 -
b10 /
b1 %
b1 *
b10 $
b10 )
b10000 #
b10000 '
#2
b1000 "
b1000 (
b1000 +
b100000 2
b1000 1
b100 0
b100 /
b100 $
b100 )
#3
b10000 "
b10000 (
b10000 +
b100000 2
b10000 1
b1000 0
b1000 /
b1000 $
b1000 )
#4
b100000000 "
b100000000 (
b100000000 +
b11001 2
b100000000 1
b1 0
b1000 -
b1 /
b1000 %
b1000 *
b1 $
b1 )
#10
b1 "
b1 (
b1 +
b100000 2
b10 1
b100 0
b1 .
b1 -
b10 /
b1 %
b1 *
b10 $
b10 )
b110000 #
b110000 '
#11
b10 "
b10 (
b10 +
b100000 2
b100 1
b1000 0
b100 /
b100 $
b100 )
#12
b100 "
b100 (
b100 +
b100000 2
b1000 1
b10000 0
b1000 /
b1000 $
b1000 )
#13
b0 "
b0 (
b0 +
b11001 2
b0 1
b10 0
b1000 -
b1 /
b1000 %
b1000 *
b1 $
b1 )
#20
b1 "
b1 (
b1 +
b10 1
b100000 2
b100 0
b10 .
b1 -
b10 /
b1 %
b1 *
b10 $
b10 )
b1010000 #
b1010000 '
#21
b10 "
b10 (
b10 +
b100000 2
b100 1
b1000 0
b100 /
b100 $
b100 )
#22
b100 "
b100 (
b100 +
b100000 2
b1000 1
b10000 0
b1000 /
b1000 $
b1000 )
#23
b0 "
b0 (
b0 +
b11001 2
b0 1
b10 0
b1000 -
b1 /
b1000 %
b1000 *
b1 $
b1 )
#24
b1111111111100000000000000000000 "
b1111111111100000000000000000000 (
b1111111111100000000000000000000 +
b11001 2
b11111111111000000000000000000000 1
b111100000000000000000000000000010 0
b11110000000000000000000000000001 /
b11110000000000000000000000000001 $
b11110000000000000000000000000001 )
#30
b1 "
b1 (
b1 +
b100001 2
b10 1
b100 0
b11 .
b1 -
b10 /
b1 %
b1 *
b10 $
b10 )
b1110000 #
b1110000 '
#31
b10 "
b10 (
b10 +
b100001 2
b100 1
b1000 0
b100 /
b100 $
b100 )
#32
b100 "
b100 (
b100 +
b100001 2
b1000 1
b10000 0
b1000 /
b1000 $
b1000 )
#33
b10000000000000000000000000 "
b10000000000000000000000000 (
b10000000000000000000000000 +
b100001 2
b100000000000000000000000000 1
b10 0
b1000 -
b1 /
b1000 %
b1000 *
b1 $
b1 )
#34
b10111100000000000000000000 "
b10111100000000000000000000 (
b10111100000000000000000000 +
b100001 2
b101111000000000000000000000 1
b111100000000000000000000000000010 0
b11110000000000000000000000000001 /
b11110000000000000000000000000001 $
b11110000000000000000000000000001 )
#40
b0 "
b0 (
b0 +
b100001 2
b0 1
b0 0
b0 -
b0 /
b10000000000000000000000000 #
b10000000000000000000000000 '
#41
b100000000000000000 "
b100000000000000000 (
b100000000000000000 +
b100001 2
b1000000000000000000 1
b10 0
b10000 -
b1 /
b10000000000000100000000001 #
b10000000000000100000000001 '
#50
b10000000000100 "
b10000000000100 (
b10000000000100 +
b0 %
b0 *
b0 $
b0 )
b1010000000000000100000000001 #
b1010000000000000100000000001 '
#1500
